{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/redux/api/index.ts"],"sourcesContent":["import {\r\n  BaseQueryFn,\r\n  createApi,\r\n  fetchBaseQuery,\r\n} from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n  baseUrl: `${process.env.NEXT_PUBLIC_API}`,\r\n});\r\n\r\nconst baseQueryExtended: BaseQueryFn = async (args, api, extraOptions) => {\r\n  const result = await baseQuery(args, api, extraOptions);\r\n  return result;\r\n};\r\n\r\nexport const api = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: baseQueryExtended,\r\n  refetchOnFocus: true,\r\n  refetchOnReconnect: true,\r\n  tagTypes: [\r\n    \"teachers\",\r\n    \"students\",\r\n    \"news\",\r\n    \"graduates\",\r\n    \"gallery\",\r\n    \"thanks_note_from_students\",\r\n    \"appeal_to_students\",\r\n    \"Contacts\",\r\n    \"thanks_note_from_graduates\",\r\n    \"successful_graduates\",\r\n    \"our_achievements\",\r\n    \"school_parliament\",\r\n    \"gimnasium_class\",\r\n    \"olympians\",\r\n    \"accounts\",\r\n    \"donations\",\r\n  ],\r\n  endpoints: () => ({}),\r\n});\r\n"],"names":[],"mappings":";;;;;;;;AAMA,MAAM,YAAY,CAAA,GAAA,mLAAA,CAAA,iBAAc,AAAD,EAAE;IAC/B,SAAS,CAAC,6DAA8B,CAAC;AAC3C;AAEA,MAAM,oBAAiC,OAAO,MAAM,KAAK;IACvD,MAAM,SAAS,MAAM,UAAU,MAAM,KAAK;IAC1C,OAAO;AACT;AAEO,MAAM,MAAM,CAAA,GAAA,qNAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,aAAa;IACb,WAAW;IACX,gBAAgB;IAChB,oBAAoB;IACpB,UAAU;QACR;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,WAAW,IAAM,CAAC,CAAC,CAAC;AACtB"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/redux/api/comments/index.ts"],"sourcesContent":["// services/commentsApi.js\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const commentsApi = createApi({\r\n  reducerPath: \"commentsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"/api\", // Ваш базовый URL для API\r\n    credentials: \"include\", // Важно для работы с cookies и сессиями\r\n  }),\r\n  tagTypes: [\"Comment\"], // Для автоматического обновления списка комментариев\r\n  endpoints: (builder) => ({\r\n    // Получение списка комментариев\r\n    getComments: builder.query<\r\n      COMMENTS.GetCommentsResponse,\r\n      COMMENTS.GetCommentsRequest\r\n    >({\r\n      query: () => \"/comments/\",\r\n      providesTags: (result = [], error, arg) =>\r\n        result.map(({ id }) => ({ type: \"Comment\", id })),\r\n    }),\r\n\r\n    // Создание нового комментария\r\n    postComment: builder.mutation<\r\n      COMMENTS.CreateCommentResponse,\r\n      COMMENTS.CreateCommentRequest\r\n    >({\r\n      query: (newComment) => ({\r\n        url: \"/comments/\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: newComment,\r\n      }),\r\n      invalidatesTags: [{ type: \"Comment\" }],\r\n    }),\r\n\r\n    // Обновление комментария\r\n    updateComment: builder.mutation<\r\n      COMMENTS.UpdateCommentResponse,\r\n      COMMENTS.UpdateCommentRequest\r\n    >({\r\n      query: ({ id, updatedComment }) => ({\r\n        url: `/comments/${id}/`,\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: updatedComment,\r\n      }),\r\n      invalidatesTags: (result, error, { id }) => [{ type: \"Comment\", id }],\r\n    }),\r\n\r\n    // Удаление комментария\r\n    deleteComment: builder.mutation<\r\n      COMMENTS.DeleteCommentResponse,\r\n      COMMENTS.DeleteCommentRequest\r\n    >({\r\n      query: ({ id }) => ({\r\n        url: `/comments/${id}/`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: (result, error, { id }) => [{ type: \"Comment\", id }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCommentsQuery,\r\n  usePostCommentMutation,\r\n  useUpdateCommentMutation,\r\n  useDeleteCommentMutation,\r\n} = commentsApi;\r\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;;;;;;;AAGnB,MAAM,cAAc,CAAA,GAAA,qNAAA,CAAA,YAAS,AAAD,EAAE;IACnC,aAAa;IACb,WAAW,CAAA,GAAA,mLAAA,CAAA,iBAAc,AAAD,EAAE;QACxB,SAAS;QACT,aAAa;IACf;IACA,UAAU;QAAC;KAAU;IACrB,WAAW,CAAC,UAAY,CAAC;YACvB,gCAAgC;YAChC,aAAa,QAAQ,KAAK,CAGxB;gBACA,OAAO,IAAM;gBACb,cAAc,CAAC,SAAS,EAAE,EAAE,OAAO,MACjC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC;4BAAE,MAAM;4BAAW;wBAAG,CAAC;YACnD;YAEA,8BAA8B;YAC9B,aAAa,QAAQ,QAAQ,CAG3B;gBACA,OAAO,CAAC,aAAe,CAAC;wBACtB,KAAK;wBACL,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM;oBACR,CAAC;gBACD,iBAAiB;oBAAC;wBAAE,MAAM;oBAAU;iBAAE;YACxC;YAEA,yBAAyB;YACzB,eAAe,QAAQ,QAAQ,CAG7B;gBACA,OAAO,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,GAAK,CAAC;wBAClC,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;wBACvB,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM;oBACR,CAAC;gBACD,iBAAiB,CAAC,QAAQ,OAAO,EAAE,EAAE,EAAE,GAAK;wBAAC;4BAAE,MAAM;4BAAW;wBAAG;qBAAE;YACvE;YAEA,uBAAuB;YACvB,eAAe,QAAQ,QAAQ,CAG7B;gBACA,OAAO,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC;wBAClB,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;wBACvB,QAAQ;oBACV,CAAC;gBACD,iBAAiB,CAAC,QAAQ,OAAO,EAAE,EAAE,EAAE,GAAK;wBAAC;4BAAE,MAAM;4BAAW;wBAAG;qBAAE;YACvE;QACF,CAAC;AACH;AAEO,MAAM,EACX,mBAAmB,EACnB,sBAAsB,EACtB,wBAAwB,EACxB,wBAAwB,EACzB,GAAG"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/redux/store.ts"],"sourcesContent":["// store.ts\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { api } from \"./api\";\r\nimport { commentsApi } from \"./api/comments\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [api.reducerPath]: api.reducer,\r\n    [commentsApi.reducerPath]: commentsApi.reducer,\r\n    // здесь могут быть другие reducers\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware()\r\n      .concat(api.middleware)\r\n      .concat(commentsApi.middleware),\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"names":[],"mappings":"AAAA,WAAW;;;;;;;;;;;AAKJ,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,CAAC,+HAAA,CAAA,MAAG,CAAC,WAAW,CAAC,EAAE,+HAAA,CAAA,MAAG,CAAC,OAAO;QAC9B,CAAC,2IAAA,CAAA,cAAW,CAAC,WAAW,CAAC,EAAE,2IAAA,CAAA,cAAW,CAAC,OAAO;IAEhD;IACA,YAAY,CAAC,uBACX,uBACG,MAAM,CAAC,+HAAA,CAAA,MAAG,CAAC,UAAU,EACrB,MAAM,CAAC,2IAAA,CAAA,cAAW,CAAC,UAAU;AACpC"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/providers/ReduxProvider.tsx"],"sourcesContent":["import { store } from \"@/redux/store\";\r\nimport { FC, ReactNode } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\ninterface ReduxProviderProps {\r\n  children: ReactNode;\r\n}\r\nconst ReduxProvider: FC<ReduxProviderProps> = ({ children }) => {\r\n  return <Provider store={store}>{children}</Provider>;\r\n};\r\n\r\nexport default ReduxProvider;\r\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,gBAAwC,CAAC,EAAE,QAAQ,EAAE;IACzD,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFM;uCAIS"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/layout.client.tsx"],"sourcesContent":["\"use client\";\r\nimport ReduxProvider from \"@/providers/ReduxProvider\";\r\nimport { FC, ReactNode } from \"react\";\r\n\r\ninterface LayoutClientProps {\r\n    children: ReactNode;\r\n}\r\nconst LayoutClient: FC<LayoutClientProps> = ({ children }) => {\r\n    return (\r\n        <>\r\n            <ReduxProvider> {children}</ReduxProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LayoutClient;\r\n  "],"names":[],"mappings":";;;;;;AAAA;;;AAOA,MAAM,eAAsC,CAAC,EAAE,QAAQ,EAAE;IACrD,qBACI;kBACI,cAAA,6LAAC,qIAAA,CAAA,UAAa;;gBAAC;gBAAE;;;;;;;;AAG7B;KANM;uCAQS"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}