{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/appPages/site/components/pages/news/NewsMainContent/NewsMainContent.tsx"],"sourcesContent":["\"use client\";\r\nimport { useGetNewsQuery } from \"@/redux/api/news\";\r\nimport scss from \"./NewsMainContent.module.scss\";\r\nimport Image from \"next/image\";\r\nimport { LuMessagesSquare } from \"react-icons/lu\";\r\nconst NewsMainContent = () => {\r\n  const { data } = useGetNewsQuery();\r\n  console.log(data, \"data\");\r\n\r\n  return (\r\n    <section className={scss.NewsMainContent}>\r\n      <div className=\"container\">\r\n        <div className={scss.content}>\r\n          <div className={scss.news_head}>\r\n            <h1>Новости</h1>\r\n            <hr />\r\n          </div>\r\n          <div className={scss.news_cards}>\r\n            {data?.map((item, index) => (\r\n              <div key={index} className={scss.news_card}>\r\n                <Image\r\n                  alt=\"news_img\"\r\n                  src={item.image}\r\n                  width={700}\r\n                  height={500}\r\n                  priority\r\n                  quality={70}\r\n                />\r\n                <h2\r\n                  style={{ width: \"100%\", maxWidth: \"320px\", height: \"90px\" }}\r\n                >\r\n                  {item.content}\r\n                  {/* Живая легенда. Что известно о <br />\r\n                  храбром учителе из Лейлека, <br />\r\n                  который защищал школу во время <br />\r\n                  беспорядков */}\r\n                </h2>\r\n                <div className={scss.news_end}>\r\n                  <p>{item.updated_at.slice(0, 9)}</p>\r\n                  {/* <LuMessagesSquare /> */}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewsMainContent;\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AAKA,MAAM,kBAAkB;;IACtB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD;IAC/B,QAAQ,GAAG,CAAC,MAAM;IAElB,qBACE,iVAAC;QAAQ,WAAW,6NAAA,CAAA,UAAI,CAAC,eAAe;kBACtC,cAAA,iVAAC;YAAI,WAAU;sBACb,cAAA,iVAAC;gBAAI,WAAW,6NAAA,CAAA,UAAI,CAAC,OAAO;;kCAC1B,iVAAC;wBAAI,WAAW,6NAAA,CAAA,UAAI,CAAC,SAAS;;0CAC5B,iVAAC;0CAAG;;;;;;0CACJ,iVAAC;;;;;;;;;;;kCAEH,iVAAC;wBAAI,WAAW,6NAAA,CAAA,UAAI,CAAC,UAAU;kCAC5B,MAAM,IAAI,CAAC,MAAM,sBAChB,iVAAC;gCAAgB,WAAW,6NAAA,CAAA,UAAI,CAAC,SAAS;;kDACxC,iVAAC,oRAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAK,KAAK,KAAK;wCACf,OAAO;wCACP,QAAQ;wCACR,QAAQ;wCACR,SAAS;;;;;;kDAEX,iVAAC;wCACC,OAAO;4CAAE,OAAO;4CAAQ,UAAU;4CAAS,QAAQ;wCAAO;kDAEzD,KAAK,OAAO;;;;;;kDAMf,iVAAC;wCAAI,WAAW,6NAAA,CAAA,UAAI,CAAC,QAAQ;kDAC3B,cAAA,iVAAC;sDAAG,KAAK,UAAU,CAAC,KAAK,CAAC,GAAG;;;;;;;;;;;;+BAnBvB;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BxB;GA3CM;;QACa,uIAAA,CAAA,kBAAe;;;KAD5B;uCA6CS"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}