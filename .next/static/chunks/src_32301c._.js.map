{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/appPages/site/components/pages/news/NewsMainContent/NewsMainContent.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGetNewsQuery } from \"@/redux/api/news\";\r\nimport Image from \"next/image\";\r\nimport { MessageSquare } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useLanguageStore } from \"@/stores/useLanguageStore\";\r\nimport styles from \"./NewsMainContent.module.scss\";\r\n\r\ninterface INews {\r\n  id: number;\r\n  image: string;\r\n  description_ky: string | null; // Nullable кылынды\r\n  description_ru: string | null; // Nullable кылынды\r\n  updated_at: string;\r\n}\r\n\r\nconst NewsMainContent: React.FC = () => {\r\n  const { data } = useGetNewsQuery();\r\n  const { isKyrgyz, t } = useLanguageStore();\r\n  const router = useRouter();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const newsPerPage = 9;\r\n\r\n  // Sort news by date, newest first (иммутабилдүү жол менен массивди өзгөртүү)\r\n  const sortedNews = data\r\n    ? [...data].sort(\r\n        (a: INews, b: INews) =>\r\n          new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\r\n      )\r\n    : [];\r\n\r\n  // Get current news items\r\n  const indexOfLastNews = currentPage * newsPerPage;\r\n  const indexOfFirstNews = indexOfLastNews - newsPerPage;\r\n  const currentNews = sortedNews.slice(indexOfFirstNews, indexOfLastNews);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <section className={styles.NewsMainContent}>\r\n      <div className=\"container\">\r\n        <div className={styles.content}>\r\n          <div className={styles.news_head}>\r\n            <h1>{t(\"Жаңылыктар\", \"Новости\")}</h1>\r\n            <hr />\r\n          </div>\r\n          <div className={styles.news_cards}>\r\n            {currentNews.map((item: INews) => (\r\n              <div\r\n                key={item.id}\r\n                className={styles.news_card}\r\n                onClick={() => router.push(`/news/${item.id}`)}\r\n              >\r\n                <Image\r\n                  alt=\"news_img\"\r\n                  src={item.image}\r\n                  width={700}\r\n                  height={500}\r\n                  priority\r\n                  quality={70}\r\n                />\r\n                <h2>\r\n                  {isKyrgyz && item.description_ky\r\n                    ? item.description_ky\r\n                    : item.description_ru ?? \"Маалымат жеткиликтүү эмес\"}\r\n                </h2>\r\n                <div className={styles.news_end}>\r\n                  <p>{item.updated_at.slice(0, 10)}</p>\r\n                  <MessageSquare />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={styles.pagination}>\r\n            <button\r\n              onClick={() => paginate(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              {t(\"Мурунку\", \"Предыдущая\")}\r\n            </button>\r\n            <span>{currentPage}</span>\r\n            <button\r\n              onClick={() => paginate(currentPage + 1)}\r\n              disabled={indexOfLastNews >= sortedNews.length}\r\n            >\r\n              {t(\"Кийинки\", \"Следующая\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewsMainContent;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAgBA,MAAM,kBAA4B;;IAChC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD;IAC/B,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD;IACvC,MAAM,SAAS,CAAA,GAAA,0RAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,kTAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,cAAc;IAEpB,6EAA6E;IAC7E,MAAM,aAAa,OACf;WAAI;KAAK,CAAC,IAAI,CACZ,CAAC,GAAU,IACT,IAAI,KAAK,EAAE,UAAU,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,UAAU,EAAE,OAAO,MAErE,EAAE;IAEN,yBAAyB;IACzB,MAAM,kBAAkB,cAAc;IACtC,MAAM,mBAAmB,kBAAkB;IAC3C,MAAM,cAAc,WAAW,KAAK,CAAC,kBAAkB;IAEvD,cAAc;IACd,MAAM,WAAW,CAAC,aAAuB,eAAe;IAExD,qBACE,kVAAC;QAAQ,WAAW,6NAAA,CAAA,UAAM,CAAC,eAAe;kBACxC,cAAA,kVAAC;YAAI,WAAU;sBACb,cAAA,kVAAC;gBAAI,WAAW,6NAAA,CAAA,UAAM,CAAC,OAAO;;kCAC5B,kVAAC;wBAAI,WAAW,6NAAA,CAAA,UAAM,CAAC,SAAS;;0CAC9B,kVAAC;0CAAI,EAAE,cAAc;;;;;;0CACrB,kVAAC;;;;;;;;;;;kCAEH,kVAAC;wBAAI,WAAW,6NAAA,CAAA,UAAM,CAAC,UAAU;kCAC9B,YAAY,GAAG,CAAC,CAAC,qBAChB,kVAAC;gCAEC,WAAW,6NAAA,CAAA,UAAM,CAAC,SAAS;gCAC3B,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;;kDAE7C,kVAAC,qRAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAK,KAAK,KAAK;wCACf,OAAO;wCACP,QAAQ;wCACR,QAAQ;wCACR,SAAS;;;;;;kDAEX,kVAAC;kDACE,YAAY,KAAK,cAAc,GAC5B,KAAK,cAAc,GACnB,KAAK,cAAc,IAAI;;;;;;kDAE7B,kVAAC;wCAAI,WAAW,6NAAA,CAAA,UAAM,CAAC,QAAQ;;0DAC7B,kVAAC;0DAAG,KAAK,UAAU,CAAC,KAAK,CAAC,GAAG;;;;;;0DAC7B,kVAAC,+SAAA,CAAA,gBAAa;;;;;;;;;;;;+BAnBX,KAAK,EAAE;;;;;;;;;;kCAwBlB,kVAAC;wBAAI,WAAW,6NAAA,CAAA,UAAM,CAAC,UAAU;;0CAC/B,kVAAC;gCACC,SAAS,IAAM,SAAS,cAAc;gCACtC,UAAU,gBAAgB;0CAEzB,EAAE,WAAW;;;;;;0CAEhB,kVAAC;0CAAM;;;;;;0CACP,kVAAC;gCACC,SAAS,IAAM,SAAS,cAAc;gCACtC,UAAU,mBAAmB,WAAW,MAAM;0CAE7C,EAAE,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5B;GA9EM;;QACa,uIAAA,CAAA,kBAAe;QACR,qIAAA,CAAA,mBAAgB;QACzB,0RAAA,CAAA,YAAS;;;KAHpB;uCAgFS"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}