{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/appPages/site/components/pages/students/StudentsClassTable/StudentsClassTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport scss from \"./StudentsClassTable.module.scss\";\r\nimport avatar from \"../../../../../../assets/images/defaultProfile.png\";\r\nimport Image from \"next/image\";\r\nimport {\r\n    useGetStudentsClassQuery,\r\n    useGetStudentsQuery,\r\n} from \"@/redux/api/students\";\r\nimport { useSearchParams } from \"next/navigation\";\r\n\r\nconst StudentClassTable = () => {\r\n    const searchParams = useSearchParams();\r\n    const classId = searchParams.get(\"grade\");\r\n\r\n    const {\r\n        data: studentsData,\r\n        isLoading,\r\n        isError,\r\n    } = useGetStudentsClassQuery(String(classId));\r\n\r\n    const [filteredData, setFilteredData] = useState(studentsData || []);\r\n\r\n    useEffect(() => {\r\n        if (studentsData) {\r\n            setFilteredData(studentsData);\r\n        }\r\n    }, [studentsData]);\r\n\r\n    if (isLoading) return <div>Загрузка...</div>;\r\n    if (isError || !studentsData) return <div>Ошибка при загрузке данных.</div>;\r\n\r\n    const filterData = (parallel?: string) => {\r\n        if (parallel) {\r\n            const result = studentsData.filter(\r\n                (item) => item.school_class.parallel === parallel\r\n            );\r\n            setFilteredData(result);\r\n        } else {\r\n            setFilteredData(studentsData);\r\n        }\r\n    };\r\n\r\n    const uniqueParallels = Array.from(\r\n        new Set(studentsData.map((item) => item.school_class.parallel))\r\n    );\r\n\r\n    return (\r\n        <section className={scss.StudentClassTable}>\r\n            <div className=\"container\">\r\n                <div className={scss.content}>\r\n                    <div className={scss.titleBlock}>\r\n                        <h2 className={scss.title}>{classId} Класс</h2>\r\n                        <div className={scss.filterButtons}>\r\n                            <button\r\n                                className={scss.button}\r\n                                onClick={() => filterData()}\r\n                            >\r\n                                Все\r\n                            </button>\r\n                            {uniqueParallels.map((parallel) => (\r\n                                <div key={parallel}>\r\n                                    <button\r\n                                        className={scss.button}\r\n                                        onClick={() => filterData(parallel!)}\r\n                                    >\r\n                                        {parallel}\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className={scss.table}>\r\n                        <div className={scss.tableTitle}>\r\n                            <h1 className={scss.titleText}>No.</h1>\r\n                            <h1 className={scss.titleText}>Имя ученика</h1>\r\n                            <h1 className={scss.titleText}>Класс</h1>\r\n                            <h1 className={scss.titleText}>Кл. руководитель</h1>\r\n                        </div>\r\n                        <div className={scss.tableContent}>\r\n                            <div className={scss.hr}></div>\r\n                            {filteredData?.map((item, index: number) => (\r\n                                <div\r\n                                    key={`${item.surname}-${item.name}-${item.last_name}-${index}`}\r\n                                    className={scss.studentInfo}\r\n                                >\r\n                                    <h1 className={scss.tableTextNumber}>\r\n                                        {index + 1}\r\n                                    </h1>\r\n                                    <h1 className={scss.tableName}>\r\n                                        <Image\r\n                                            className={scss.studentIcon}\r\n                                            src={avatar}\r\n                                            alt=\"Аватар студента\"\r\n                                        />\r\n                                        {item.surname} {item.name}{\" \"}\r\n                                    </h1>\r\n                                    <h1 className={scss.tableText}>\r\n                                        {item.school_class.grade}-\r\n                                        {item.school_class.parallel}\r\n                                    </h1>\r\n                                    <h1 className={scss.tableText}>\r\n                                        {item.classroom_teacher\r\n                                            ?.map((teacher) => teacher.name)\r\n                                            .join(\", \")}\r\n                                    </h1>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default StudentClassTable;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(site)/students/[school_class]/page.tsx"],"sourcesContent":["\"use client\";\r\nimport StudentsClass from \"@/appPages/site/components/pages/students/StudentsClassTable/StudentsClassTable\";\r\nimport { useParams } from \"next/navigation\";\r\nimport React from \"react\";\r\n\r\nconst page = () => {\r\n    return (\r\n        <>\r\n            <StudentsClass />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default page;\r\n"],"names":[],"mappings":";;;;;;AAAA;;;AAKA,MAAM,OAAO;IACT,qBACI;kBACI,cAAA,6LAAC,0MAAA,CAAA,UAAa;;;;;;AAG1B;uCAEe"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}