{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/use-shortcut.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = useState<string[]>([])\n  const timeoutRef = useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n"],"names":[],"mappings":";;;;;;;AAMA,SAAS,qBAAqB,KAAA;IAC5B,MAAM,EAAE,GAAA,EAAI,GAAI;IAChB,OAAO,IAAI,MAAA,KAAW,KAAM,IAAI,MAAA,GAAS,KAAK,eAAe,IAAA,CAAK;AACpE;AAWO,SAAS,YAAY,QAA0B,CAAC,CAAA;IACrD,MAAM,EAAE,UAAU,GAAA,EAAK,iBAAiB,IAAM,IAAA,EAAK,GAAI;IAEvD,MAAM,CAAC,MAAM,QAAO,GAAI,CAAA,GAAA,oWAAA,CAAA,WAAA,EAAmB,EAAE;IAC7C,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,SAAA;IAEnB,MAAM,QAAQ;QACZ,IAAI,WAAW,OAAA,EAAS;YACtB,aAAa,WAAW,OAAO;YAC/B,WAAW,OAAA,GAAU;QACvB;IACF;IAEA,MAAM,sBAAsB;QAC1B;QACA,WAAW,OAAA,GAAU,WAAW;YAC9B,QAAQ,EAAE;YACV,WAAW,OAAA,GAAU;QACvB,GAAG;IACL;IAEA,CAAA,GAAA,oWAAA,CAAA,YAAA,EAAU,IAAM,OAAO,EAAE;IAIzB,SAAS,UAAU,EAAA;QACjB,OAAO,CAAC;YACN,IAAI,MAAM,GAAA,KAAQ,aAAa;gBAC7B,MAAM,WAAW;uBAAI;iBAAI;gBACzB,SAAS,GAAA;gBACT,QAAQ;gBACR;YACF;YAEA,IAAI,qBAAqB,QAAQ;gBAC/B,MAAM,WAAW,KAAK,MAAA,CAAO,MAAM,GAAG;gBAEtC,IAAI,eAAe,QAAQ;oBACzB,MAAM,cAAA;oBACN,MAAM,eAAA;gBACR;gBAEA,QAAQ;gBACR,GAAG,SAAS,IAAA,CAAK;gBAEjB;YACF;QACF;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/get-next-item-from-search.ts"],"sourcesContent":["/**\n * Gets the next item based on a search string\n *\n * @param items array of items\n * @param searchString the search string\n * @param itemToString resolves an item to string\n * @param currentItem the current selected item\n */\nexport function getNextItemFromSearch<T>(\n  items: T[],\n  searchString: string,\n  itemToString: (item: T) => string,\n  currentItem: T,\n): T | undefined {\n  if (searchString == null) {\n    return currentItem\n  }\n\n  // If current item doesn't exist, find the item that matches the search string\n  if (!currentItem) {\n    const foundItem = items.find((item) =>\n      itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()),\n    )\n    return foundItem\n  }\n\n  // Filter items for ones that match the search string (case insensitive)\n  const matchingItems = items.filter((item) =>\n    itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()),\n  )\n\n  // If there's a match, let's get the next item to select\n  if (matchingItems.length > 0) {\n    let nextIndex: number\n\n    // If the currentItem is in the available items, we move to the next available option\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem)\n      nextIndex = currentIndex + 1\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0\n      }\n      return matchingItems[nextIndex]\n    }\n    // Else, we pick the first item in the available items\n    nextIndex = items.indexOf(matchingItems[0])\n    return items[nextIndex]\n  }\n\n  // a decent fallback to the currentItem\n  return currentItem\n}\n"],"names":[],"mappings":";;;;;AAQO,SAAS,sBACd,KAAA,EACA,YAAA,EACA,YAAA,EACA,WAAA;IAEA,IAAI,gBAAgB,MAAM;QACxB,OAAO;IACT;IAGA,IAAI,CAAC,aAAa;QAChB,MAAM,YAAY,MAAM,IAAA,CAAK,CAAC,OAC5B,aAAa,MAAM,WAAA,GAAc,UAAA,CAAW,aAAa,WAAA;QAE3D,OAAO;IACT;IAGA,MAAM,gBAAgB,MAAM,MAAA,CAAO,CAAC,OAClC,aAAa,MAAM,WAAA,GAAc,UAAA,CAAW,aAAa,WAAA;IAI3D,IAAI,cAAc,MAAA,GAAS,GAAG;QAC5B,IAAI;QAGJ,IAAI,cAAc,QAAA,CAAS,cAAc;YACvC,MAAM,eAAe,cAAc,OAAA,CAAQ;YAC3C,YAAY,eAAe;YAC3B,IAAI,cAAc,cAAc,MAAA,EAAQ;gBACtC,YAAY;YACd;YACA,OAAO,aAAA,CAAc,UAAS;QAChC;QAEA,YAAY,MAAM,OAAA,CAAQ,aAAA,CAAc,EAAE;QAC1C,OAAO,KAAA,CAAM,UAAS;IACxB;IAGA,OAAO;AACT"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/use-menu.ts"],"sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport { useFocusOnHide } from \"@chakra-ui/react-use-focus-effect\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  useDisclosure,\n  UseDisclosureProps,\n} from \"@chakra-ui/react-use-disclosure\"\nimport { useOutsideClick } from \"@chakra-ui/react-use-outside-click\"\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { dataAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\n\nimport React, {\n  cloneElement,\n  useCallback,\n  useRef,\n  useState,\n  useId,\n  useMemo,\n  useEffect,\n} from \"react\"\nimport { useShortcut } from \"./use-shortcut\"\nimport { getNextItemFromSearch } from \"./get-next-item-from-search\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps\n  extends Omit<UsePopperProps, \"enabled\">,\n    UseDisclosureProps {\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: React.RefObject<{ focus(): void }>\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance ðŸš€:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   *\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * Performance ðŸš€:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * If `rtl`, proper placement positions will be flipped i.e. 'top-right' will\n   * become 'top-left' and vice-verse\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /*\n   * If `true`, the menu will be positioned when it mounts\n   * (even if it's not open).\n   *\n   * Note ðŸš¨: We don't recommend using this in a menu/popover intensive UI or page\n   * as it might affect scrolling performance.\n   *\n   * @default false\n   */\n  computePositionOnMount?: boolean\n}\n\nfunction useIds(idProp?: string, ...prefixes: string[]) {\n  const reactId = useId()\n  const id = idProp || reactId\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`)\n  }, [id, prefixes])\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n\nfunction isActiveElement(element: HTMLElement) {\n  const doc = getOwnerDocument(element)\n  return doc.activeElement === (element as HTMLElement)\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    initialFocusRef,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  const focusMenu = useCallback(() => {\n    requestAnimationFrame(() => {\n      menuRef.current?.focus({ preventScroll: false })\n    })\n  }, [])\n\n  const focusFirstItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) {\n        initialFocusRef.current?.focus()\n      } else {\n        const first = descendants.firstEnabled()\n        if (first) setFocusedIndex(first.index)\n      }\n    })\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const focusLastItem = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.lastEnabled()\n      if (last) setFocusedIndex(last.index)\n    })\n    timeoutIds.current.add(id)\n  }, [descendants])\n\n  const onOpenInternal = useCallback(() => {\n    onOpenProp?.()\n    if (autoSelect) {\n      focusFirstItem()\n    } else {\n      focusMenu()\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp])\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal,\n  })\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      if (!buttonRef.current?.contains(event.target as HTMLElement)) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper: any = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction,\n  })\n\n  const [focusedIndex, setFocusedIndex] = useState(-1)\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  const animationState = useAnimationState({ isOpen, ref: menuRef })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = useCallback(() => {\n    onOpen()\n    focusMenu()\n  }, [onOpen, focusMenu])\n\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  // clean up timeouts\n  useEffect(() => {\n    const ids = timeoutIds.current\n    return () => {\n      ids.forEach((id) => clearTimeout(id))\n      ids.clear()\n    }\n  }, [])\n\n  const openAndFocusFirstItem = useCallback(() => {\n    onOpen()\n    focusFirstItem()\n  }, [focusFirstItem, onOpen])\n\n  const openAndFocusLastItem = useCallback(() => {\n    onOpen()\n    focusLastItem()\n  }, [onOpen, focusLastItem])\n\n  const refocus = useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const node = descendants.item(focusedIndex)?.node\n    node?.focus({ preventScroll: true })\n  }, [isOpen, focusedIndex, descendants])\n\n  /**\n   * Track the animation frame which is scheduled to focus\n   * a menu item, so it can be cancelled if another item\n   * is focused before the animation executes. This prevents\n   * infinite rerenders.\n   */\n  const rafId = useRef<number | null>(null)\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n    initialFocusRef,\n    rafId,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(target: EventTarget | null) {\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return (\n    isHTMLElement(target) &&\n    !!target?.getAttribute(\"role\")?.startsWith(\"menuitem\")\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n): React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n    unstable__animationState: animated,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) =>\n      event.key !== \" \" && isTargetMenuItem(event.target),\n  })\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      // ignore events bubbles from portal children\n      if (!event.currentTarget.contains(event.target as Element)) return\n\n      const eventKey = event.key\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event)\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\" | \"disabled\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n  /**\n   * The type of the menuitem.\n   */\n  type?: React.ButtonHTMLAttributes<HTMLButtonElement>[\"type\"]\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    onFocus: onFocusProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    type: typeProp,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n    rafId,\n  } = menu\n\n  const ref = useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = useCallback(\n    (event: any) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = useCallback(\n    (event: any) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = useCallback(\n    (event: any) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event.currentTarget)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const onFocus = useCallback(\n    (event: React.FocusEvent) => {\n      onFocusProp?.(event)\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, onFocusProp, index],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      // Cancel any pending animations\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n      rafId.current = requestAnimationFrame(() => {\n        ref.current?.focus({ preventScroll: true })\n        rafId.current = null\n      })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({ preventScroll: true })\n    }\n\n    return () => {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    type: typeProp ?? (clickableProps as any).type,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends Omit<UseMenuItemProps, \"type\">,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...rest } = props\n  const ownProps = useMenuItem(rest, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && typeof value === \"string\") {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && Array.isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? value.filter((item) => item !== selectedValue)\n          : value.concat(selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n\nfunction isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) return false\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nfunction isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n"],"names":["id","event"],"mappings":"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"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/menu.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  UseMenuProps,\n} from \"./use-menu\"\n\nconst [MenuStylesProvider, useMenuStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `,\n})\n\nexport { useMenuStyles }\n\ntype MaybeRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode)\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n *\n * @see Docs https://chakra-ui.com/docs/components/menu\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction })\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <MenuStylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </MenuStylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nMenu.displayName = \"Menu\"\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAiBA,IAAM,CAAC,oBAAoB,cAAa,GAAI,CAAA,GAAA,yQAAA,CAAA,gBAAA,EAE1C;IACA,MAAM,CAAA,iBAAA,CAAA;IACN,cAAc,CAAA,6FAAA,CAAA;AAChB;AAoBO,IAAM,OAA4B,CAAC;IACxC,MAAM,EAAE,QAAA,EAAS,GAAI;IAErB,MAAM,SAAS,CAAA,GAAA,0XAAA,CAAA,sBAAA,EAAoB,QAAQ;IAC3C,MAAM,WAAW,CAAA,GAAA,mPAAA,CAAA,mBAAA,EAAiB;IAClC,MAAM,EAAE,SAAA,EAAU,GAAI,CAAA,GAAA,0XAAA,CAAA,WAAA;IACtB,MAAM,EAAE,WAAA,EAAa,GAAG,KAAI,GAAI,CAAA,GAAA,0XAAA,CAAA,UAAA,EAAQ;QAAE,GAAG,QAAA;QAAU;IAAU;IACjE,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,UAAA,EAAQ,IAAM,KAAK;QAAC;KAAI;IAExC,MAAM,EAAE,MAAA,EAAQ,OAAA,EAAS,WAAA,EAAY,GAAI;IAEzC,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,0BAAA,EAAA;QAAwB,OAAO;QAC9B,UAAA,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,eAAA,EAAA;YAAa,OAAO;YACnB,UAAA,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,oBAAA;gBAAmB,OAAO;gBACxB,UAAA,CAAA,GAAA,iPAAA,CAAA,UAAA,EAAQ,UAAU;oBAAE;oBAAQ;oBAAS;gBAAY;YAAC;QACrD;IACF;AAGN;AAEA,KAAK,WAAA,GAAc"}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/menu-button.tsx"],"sourcesContent":["import { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuButton } from \"./use-menu\"\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useMenuStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n *\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{ pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 }}\n        >\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nMenuButton.displayName = \"MenuButton\"\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAQA,IAAM,mBAAmB,CAAA,GAAA,0XAAA,CAAA,aAAA,EAAsC,CAAC,OAAO;IACrE,MAAM,SAAS,CAAA,GAAA,0XAAA,CAAA,gBAAA;IACf,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,SAAA,CAAO,MAAA,EAAP;QACC;QACC,GAAG,KAAA;QACJ,OAAO;YACL,SAAS;YACT,YAAY;YACZ,YAAY;YACZ,SAAS;YACT,GAAG,OAAO,MAAA;QACZ;IAAA;AAGN;AAOO,IAAM,aAAa,CAAA,GAAA,0XAAA,CAAA,aAAA,EACxB,CAAC,OAAO;IACN,MAAM,EAAE,QAAA,EAAU,IAAI,EAAA,EAAI,GAAG,MAAK,GAAI;IAEtC,MAAM,cAAc,CAAA,GAAA,0XAAA,CAAA,gBAAA,EAAc,MAAM;IAExC,MAAM,UAAU,MAAM;IAEtB,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,SAAA;QACE,GAAG,WAAA;QACJ,WAAW,CAAA,GAAA,iPAAA,CAAA,KAAA,EAAG,4BAA4B,MAAM,SAAS;QAEzD,UAAA,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,SAAA,CAAO,IAAA,EAAP;YACC,OAAO;gBAAE,eAAe;gBAAQ,MAAM;gBAAY,MAAM;YAAE;YAEzD,UAAA,MAAM,QAAA;QAAA;IACT;AAGN;AAGF,WAAW,WAAA,GAAc"}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/menu-list.tsx"],"sourcesContent":["import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nimport { HTMLMotionProps, motion, Variants } from \"framer-motion\"\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuContext, useMenuList, useMenuPositioner } from \"./use-menu\"\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * Props for the root element that positions the menu.\n   */\n  rootProps?: HTMLChakraProps<\"div\">\n  /**\n   * The framer-motion props to animate the menu list\n   */\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst MenuTransition = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const { rootProps, motionProps, ...rest } = props\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated,\n  } = useMenuContext()\n\n  const listProps = useMenuList(rest, ref) as any\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useMenuStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <MenuTransition\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{ outline: 0, ...styles.list }}\n        {...motionProps}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        {...listProps}\n        onUpdate={onTransitionEnd}\n        onAnimationComplete={callAll(\n          animated.onComplete,\n          listProps.onAnimationComplete,\n        )}\n      />\n    </chakra.div>\n  )\n})\n\nMenuList.displayName = \"MenuList\"\n"],"names":["MenuList"],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,IAAM,iBAA2B;IAC/B,OAAO;QACL,YAAY;QACZ,SAAS;QACT,OAAO;QACP,YAAY;YACV,UAAU;YACV,MAAM;gBAAC;gBAAK;gBAAG;gBAAK;aAAC;QACvB;IACF;IACA,MAAM;QACJ,eAAe;YACb,YAAY;QACd;QACA,SAAS;QACT,OAAO;QACP,YAAY;YACV,UAAU;YACV,SAAS;QACX;IACF;AACF;AAEA,IAAM,iBAAiB,CAAA,GAAA,0XAAA,CAAA,SAAA,EAAO,uXAAA,CAAA,SAAA,CAAO,GAAG;AAEjC,IAAM,WAAW,CAAA,GAAA,0XAAA,CAAA,aAAA,EAAiC,SAASA,UAChE,KAAA,EACA,GAAA;IA7CF,IAAA,IAAA;IA+CE,MAAM,EAAE,SAAA,EAAW,WAAA,EAAa,GAAG,MAAK,GAAI;IAC5C,MAAM,EACJ,MAAA,EACA,eAAA,EACA,0BAA0B,QAAA,EAC5B,GAAI,CAAA,GAAA,0XAAA,CAAA,iBAAA;IAEJ,MAAM,YAAY,CAAA,GAAA,0XAAA,CAAA,cAAA,EAAY,MAAM;IACpC,MAAM,kBAAkB,CAAA,GAAA,0XAAA,CAAA,oBAAA,EAAkB;IAE1C,MAAM,SAAS,CAAA,GAAA,0XAAA,CAAA,gBAAA;IAEf,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,SAAA,CAAO,GAAA,EAAP;QACE,GAAG,eAAA;QACJ,OAAO;YAAE,QAAA,CAAQ,KAAA,MAAM,MAAA,KAAN,OAAA,KAAA,CAAgB,KAAA,OAAO,IAAA,KAAP,OAAA,KAAA,IAAA,GAAa,MAAA;QAAO;QAErD,UAAA,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,gBAAA;YACC,UAAU;YACV,SAAS;YACT,SAAS,SAAS,UAAU;YAC5B,OAAO;gBAAE,SAAS;gBAAG,GAAG,OAAO,IAAA;YAAK;YACnC,GAAG,WAAA;YACJ,WAAW,CAAA,GAAA,iPAAA,CAAA,KAAA,EAAG,0BAA0B,UAAU,SAAS;YAC1D,GAAG,SAAA;YACJ,UAAU;YACV,qBAAqB,CAAA,GAAA,iPAAA,CAAA,UAAA,EACnB,SAAS,UAAA,EACT,UAAU,mBAAA;QACZ;IACF;AAGN;AAEA,SAAS,WAAA,GAAc"}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 840, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/menu-command.tsx"],"sourcesContent":["import { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useMenuStyles } from \"./menu\"\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useMenuStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nMenuCommand.displayName = \"MenuCommand\"\n"],"names":[],"mappings":";;;;;;;;;;;;AAKO,IAAM,cAAc,CAAA,GAAA,0XAAA,CAAA,aAAA,EACzB,CAAC,OAAO;IACN,MAAM,SAAS,CAAA,GAAA,0XAAA,CAAA,gBAAA;IACf,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,SAAA,CAAO,IAAA,EAAP;QACC;QACC,GAAG,KAAA;QACJ,OAAO,OAAO,OAAA;QACd,WAAU;IAAA;AAGhB;AAGF,YAAY,WAAA,GAAc"}},
    {"offset": {"line": 864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/styled-menu-item.tsx"],"sourcesContent":["import { chakra, forwardRef, SystemStyleObject } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { useMenuStyles } from \"./menu\"\nimport { StyledMenuItemProps } from \"./menu-item\"\n\nexport const StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useMenuStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as || type ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = useMemo(\n      () => ({\n        textDecoration: \"none\",\n        color: \"inherit\",\n        userSelect: \"none\",\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"start\",\n        flex: \"0 0 auto\",\n        outline: 0,\n        ...styles.item,\n      }),\n      [styles.item],\n    )\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAKO,IAAM,iBAAiB,CAAA,GAAA,0XAAA,CAAA,aAAA,EAC5B,CAAC,OAAO;IACN,MAAM,EAAE,IAAA,EAAM,GAAG,MAAK,GAAI;IAC1B,MAAM,SAAS,CAAA,GAAA,0XAAA,CAAA,gBAAA;IAOf,MAAM,UAAU,KAAK,EAAA,IAAM,OAAO,QAAA,OAAA,OAAQ,KAAA,IAAY;IAEtD,MAAM,eAAkC,CAAA,GAAA,oWAAA,CAAA,UAAA,EACtC,IAAA,CAAO;YACL,gBAAgB;YAChB,OAAO;YACP,YAAY;YACZ,SAAS;YACT,OAAO;YACP,YAAY;YACZ,WAAW;YACX,MAAM;YACN,SAAS;YACT,GAAG,OAAO,IAAA;QACZ,CAAA,GACA;QAAC,OAAO,IAAI;KAAA;IAGd,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,SAAA,CAAO,MAAA,EAAP;QAAc;QAAU,MAAM;QAAU,GAAG,IAAA;QAAM,OAAO;IAAA;AAE7D"}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 915, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/menu-icon.tsx"],"sourcesContent":["import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children, cloneElement, isValidElement } from \"react\"\nimport { useMenuStyles } from \"./menu\"\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const styles = useMenuStyles()\n\n  const child = Children.only(children)\n\n  const clone = isValidElement(child)\n    ? cloneElement<any>(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span className={_className} {...rest} __css={styles.icon}>\n      {clone}\n    </chakra.span>\n  )\n}\n\nMenuIcon.displayName = \"MenuIcon\"\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMO,IAAM,WAA8C,CAAC;IAC1D,MAAM,EAAE,SAAA,EAAW,QAAA,EAAU,GAAG,MAAK,GAAI;IAEzC,MAAM,SAAS,CAAA,GAAA,0XAAA,CAAA,gBAAA;IAEf,MAAM,QAAQ,oWAAA,CAAA,WAAA,CAAS,IAAA,CAAK;IAE5B,MAAM,QAAQ,CAAA,GAAA,oWAAA,CAAA,iBAAA,EAAe,SACzB,CAAA,GAAA,oWAAA,CAAA,eAAA,EAAkB,OAAO;QACvB,WAAW;QACX,eAAe;QACf,WAAW,CAAA,GAAA,iPAAA,CAAA,KAAA,EAAG,qBAAqB,MAAM,KAAA,CAAM,SAAS;IAC1D,KACA;IAEJ,MAAM,aAAa,CAAA,GAAA,iPAAA,CAAA,KAAA,EAAG,6BAA6B;IAEnD,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,SAAA,CAAO,IAAA,EAAP;QAAY,WAAW;QAAa,GAAG,IAAA;QAAM,OAAO,OAAO,IAAA;QACzD,UAAA;IAAA;AAGP;AAEA,SAAS,WAAA,GAAc"}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_@emotion+react@11.13.3_@types+react@18.3.10_rea_ycfr47xtbfujahmrvcm764g5ei/node_modules/@chakra-ui/menu/src/menu-item.tsx"],"sourcesContent":["import { forwardRef, HTMLChakraProps, SystemProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { MenuCommand } from \"./menu-command\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { useMenuItem, UseMenuItemProps } from \"./use-menu\"\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\n/**\n * Use prop `isDisabled` instead\n */\ntype IsDisabledProps = \"disabled\" | \"aria-disabled\"\n\nexport interface MenuItemProps\n  extends Omit<HTMLChakraProps<\"button\">, IsDisabledProps>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nMenuItem.displayName = \"MenuItem\"\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AA+CO,IAAM,WAAW,CAAA,GAAA,0XAAA,CAAA,aAAA,EAAoC,CAAC,OAAO;IAClE,MAAM,EACJ,IAAA,EACA,cAAc,SAAA,EACd,OAAA,EACA,iBAAiB,SAAA,EACjB,QAAA,EACA,GAAG,MACL,GAAI;IAEJ,MAAM,gBAAgB,CAAA,GAAA,0XAAA,CAAA,cAAA,EAAY,MAAM;IAExC,MAAM,aAAa,QAAQ;IAE3B,MAAM,YAAY,aAChB,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,QAAA;QAAK,OAAO;YAAE,eAAe;YAAQ,MAAM;QAAE;QAAI;IAAA,KAElD;IAGF,OACE,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,OAAA,EAAC,0XAAA,CAAA,iBAAA,EAAA;QACE,GAAG,aAAA;QACJ,WAAW,CAAA,GAAA,iPAAA,CAAA,KAAA,EAAG,yBAAyB,cAAc,SAAS;QAE7D,UAAA;YAAA,QACC,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,WAAA,EAAA;gBAAS,UAAS;gBAAQ,WAAW;gBACnC,UAAA;YAAA;YAGJ;YACA,WACC,aAAA,GAAA,CAAA,GAAA,sXAAA,CAAA,MAAA,EAAC,0XAAA,CAAA,cAAA,EAAA;gBAAY,aAAa;gBAAiB,UAAA;YAAA;SAAQ;IAAA;AAI3D;AAEA,SAAS,WAAA,GAAc"}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}