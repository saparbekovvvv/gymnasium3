{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/redux/api/students/index.ts"],"sourcesContent":["import { api as index } from \"..\";\n\nconst ENDPOINTS = process.env.NEXT_PUBLIC_ENDPOINT;\n\nconst api = index.injectEndpoints({\n    endpoints: (build) => ({\n        getStudents: build.query<\n            STUDENTS.GetStudentsResponse,\n            STUDENTS.GetStudentsRequest\n        >({\n            query: () => ({\n                url: `${ENDPOINTS}/students/`,\n                method: \"GET\",\n            }),\n            providesTags: [\"students\"],\n        }),\n        getStudentsClass: build.query<\n            STUDENTS.GetStudentsClassResponse,\n            STUDENTS.GetStudentsClassRequest\n        >({\n            query: (id) => ({\n                url: `${ENDPOINTS}/students/?school_class?grade=${id}`,\n                method: \"GET\",\n            }),\n        }),\n    }),\n});\n\nexport const { useGetStudentsQuery, useGetStudentsClassQuery } = api;\n"],"names":[],"mappings":";;;;;;;AAEA,MAAM;AAEN,MAAM,MAAM,4HAAA,CAAA,MAAK,CAAC,eAAe,CAAC;IAC9B,WAAW,CAAC,QAAU,CAAC;YACnB,aAAa,MAAM,KAAK,CAGtB;gBACE,OAAO,IAAM,CAAC;wBACV,KAAK,CAAC,EAAE,UAAU,UAAU,CAAC;wBAC7B,QAAQ;oBACZ,CAAC;gBACD,cAAc;oBAAC;iBAAW;YAC9B;YACA,kBAAkB,MAAM,KAAK,CAG3B;gBACE,OAAO,CAAC,KAAO,CAAC;wBACZ,KAAK,CAAC,EAAE,UAAU,8BAA8B,EAAE,GAAG,CAAC;wBACtD,QAAQ;oBACZ,CAAC;YACL;QACJ,CAAC;AACL;AAEO,MAAM,EAAE,mBAAmB,EAAE,wBAAwB,EAAE,GAAG"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/appPages/site/components/pages/students/OlympaidTable/OlympaidTable.tsx"],"sourcesContent":["\"use client\";\nimport { useGetStudentsQuery } from \"@/redux/api/students\";\nimport scss from \"./OlympaidTable.module.scss\";\nimport React, { useMemo } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useLanguageStore } from \"@/stores/useLanguageStore\";\n\nconst OlympaidsSelection = () => {\n    const router = useRouter();\n    const { isKyrgyz, t } = useLanguageStore();\n\n    const { data, isError, isLoading } = useGetStudentsQuery() || {};\n\n    const uniqueCategories = useMemo(() => {\n        if (!data) return [];\n        return Array.from(\n            new Set(data.map((item) => item.olympian_status?.choosing))\n        ).filter(Boolean);\n    }, [data]);\n\n    if (isLoading)\n        return (\n            <div className={scss.loading} role=\"status\" aria-live=\"polite\">\n                {t(\"Жүктөлүүдө...\", \"Загрузка...\")}\n            </div>\n        );\n    if (isError || !data) {\n        return (\n            <div className={scss.error} role=\"alert\">\n                {t(\n                    \"Маалыматты жүктөөдө ката кетти\",\n                    \"Ошибка при загрузке данных\"\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <div className={scss.OlympaidsSelection}>\n            <div className=\"container\">\n                <div className={scss.content}>\n                    <h1 className={scss.title}>\n                        {t(\"Олимпияданын түрлөрү\", \"Виды олимпияд\")}\n                    </h1>\n                    {uniqueCategories.length > 0 ? (\n                        <div className={scss.cards}>\n                            {uniqueCategories.map((category) => (\n                                <button\n                                    onClick={() =>\n                                        router.push(\n                                            `/students/olympians/olymp_categories/${encodeURIComponent(\n                                                category\n                                            )}`\n                                        )\n                                    }\n                                    key={category}\n                                    className={scss.card}\n                                >\n                                    <h2>{category}</h2>\n                                </button>\n                            ))}\n                        </div>\n                    ) : (\n                        <p className={scss.noCategories}>\n                            {t(\n                                \"Категориялар табылган жок\",\n                                \"Категории не найдены\"\n                            )}\n                        </p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OlympaidsSelection;\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;AAOA,MAAM,qBAAqB;IACvB,MAAM,SAAS,CAAA,GAAA,uRAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD;IAEvC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,sBAAmB,AAAD,OAAO,CAAC;IAE/D,MAAM,mBAAmB,CAAA,GAAA,oWAAA,CAAA,UAAO,AAAD,EAAE;QAC7B,IAAI,CAAC,MAAM,OAAO,EAAE;QACpB,OAAO,MAAM,IAAI,CACb,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,OAAS,KAAK,eAAe,EAAE,YACnD,MAAM,CAAC;IACb,GAAG;QAAC;KAAK;IAET,IAAI,WACA,qBACI,6YAAC;QAAI,WAAW,0NAAA,CAAA,UAAI,CAAC,OAAO;QAAE,MAAK;QAAS,aAAU;kBACjD,EAAE,iBAAiB;;;;;;IAGhC,IAAI,WAAW,CAAC,MAAM;QAClB,qBACI,6YAAC;YAAI,WAAW,0NAAA,CAAA,UAAI,CAAC,KAAK;YAAE,MAAK;sBAC5B,EACG,kCACA;;;;;;IAIhB;IAEA,qBACI,6YAAC;QAAI,WAAW,0NAAA,CAAA,UAAI,CAAC,kBAAkB;kBACnC,cAAA,6YAAC;YAAI,WAAU;sBACX,cAAA,6YAAC;gBAAI,WAAW,0NAAA,CAAA,UAAI,CAAC,OAAO;;kCACxB,6YAAC;wBAAG,WAAW,0NAAA,CAAA,UAAI,CAAC,KAAK;kCACpB,EAAE,wBAAwB;;;;;;oBAE9B,iBAAiB,MAAM,GAAG,kBACvB,6YAAC;wBAAI,WAAW,0NAAA,CAAA,UAAI,CAAC,KAAK;kCACrB,iBAAiB,GAAG,CAAC,CAAC,yBACnB,6YAAC;gCACG,SAAS,IACL,OAAO,IAAI,CACP,CAAC,qCAAqC,EAAE,mBACpC,UACF,CAAC;gCAIX,WAAW,0NAAA,CAAA,UAAI,CAAC,IAAI;0CAEpB,cAAA,6YAAC;8CAAI;;;;;;+BAHA;;;;;;;;;6CAQjB,6YAAC;wBAAE,WAAW,0NAAA,CAAA,UAAI,CAAC,YAAY;kCAC1B,EACG,6BACA;;;;;;;;;;;;;;;;;;;;;;AAQhC;uCAEe"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}